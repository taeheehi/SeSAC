꽤 오랜시간 쌓인 메모장들..... 




🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵

구현해만드는 순서 만들기 쪼개 보기 
ex.
①투두를 넣는다 
map을 돌려서 li 생성하기 
reducer - dispatch action switch


엘리의 드림코딩 - react 

-------------------------


alert vs confirm

칸이 field
field -> updateDoc과 함께 사용해아함
updateDoc - deleteDoc 함께 사용해야함

window.doc

-------------------------

최우선 과제 - react로 클론 코딩이 가능한지?


-------------------------


폰트 
구글 폰트  /  네이버(나눔)

PPT 템플릿 
미리캔버스 / 템플릿 공유 사이트 (상업적인 용도로 사용할 것 가인면 GOOD)

수 목 금 

🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵


기본적인 개념들  +   놓치면 안되는 포인트들 

프로그래머로 사고하고 문제를 해결하는 능력 

강의 교안, 노션 템플릿 

라이브러리 VS 프레임워크 
리액트 내부 동작 원리
필요한 개발툴, 개발환경 설정 
Props, state, Render   -   컴포넌트로 만들어 나가는 연습!   ( 리액트의 3대 요소 )

고급 내용들 Deep Dive 
상태관리 useReducer, Immer, Context, 성능


----------------------------------------

개발자 답게 공부 하려면 
수동적으로 지식을 얻는데 그치는게 아니라 

새로운 것을 배워 나가는 방법을 배워야 한다.
1️⃣호기심을 가지고 흥미롭게	
2️⃣문제 해결능력 연습이 중요하다.
  무엇이 문제인지, 어떤게 문제가 되는지 빠르게 정의할 수 있어야 하고, 다양한 옵션들을 생각해내서 가장최적화 빠르게 적용하고 구현해 나가는 것이 중요해요.
ㄴ 그냥 이러는 거구나 하고 보는 사람과 
실제로 챌린지마다 부딪혀가면서 몸소 구현해보는 사람과는 당연히 실력차익 나겠죠? 
그러니까 
3️⃣ 능동적으로 강의를 들어야 한다. 
문제를 정의하고 그 문제를 해결하는 능력을 기르기 위해서는, 
4️⃣이해를 먼저 하고, 노트를 정리해야 한다.
모든 걸 다 적으려고 하지마 ( 특히 나!!)

코드상에, 머리에 다가 남겨 두고 
노트에다가는 개념과 설명을 정리해두는 것이 아니라 내가 잊지 말아야 할 포인트들만, 중요한 명심사항, 유용한 사이트들 ... 이런 진짜 중요한 것들만 정리해보는 것이 좋을 것 같다.
5️⃣원활한 의사소통 정말 중요하다.
개발자는 코딩만 잘한다고 다가 아니고, 팀원들 내 동료들, 상사들,PM, 디자이너 등등 다양한 사람들과 의사소통 해나가는 것이 정말 중요하고요.
그리고 나중에 시니어, 태클 팀장이나  필요한 설명을 해주고 지시를 내리는 것도 정말 중요해요.
ㄴ 커뮤니티나 토론창에서 

내가명확하게 원하는 것을 

내가 아는 지식을 설명하는 연습을 하면서 
더 탄탄하게 지식을 만드는 연습도 하였으면 좋겠어요 

조급해하지 말고 
어제보다 더 성장 했는지에 관해


포토샵 / 일러스트 / 피그마 / 구글ppt 

🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵

노마드 코더  - 니꼬
 드림 코딩 - 엘리 


이미지 css


🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵

타입이 필요한 이유

사용자가 함수를 호출하면서 


----6번 문제 타입추론이 일어난다.


🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵

void : 아무것도 반환하지 않는다. 반환할 것이 없어.
함수에서만 쓸수 있는 타입으로, 
아무것도 반환하지 않는 함수의 반환 값으로만 사용되는 타입이 voidl 이다.


선택적 매개변수 
매개변수+물음표(?)  붙이면 => 옵션이다. 선택적 매개변수가 된다.


주의 사항 

선택적 매개변수는 반드시 필수 매개변수 뒤에 위치해야 한다.

맨뒤에다가 !

중간중간에 껴놓으면 큰일난다!


-------------------------------------
기본 매개변수

선택적 매개변수에 값이 들어오지 않으면 undefined가 뜨게 되는 것이 있는데 그럴 경우를 대비하여 기본 매개변수로 기본값을 저장해 놓는다.

JSX.Element 
리턴타입 


 태그가 반환이 되겠죠

🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵
타입 별칭을 이용해서 
유저타입을 만들어 놓는 
객레인데 
name 이란 키와 age 란 키 

둘이 똑같은 키 입니다. 


구현 implements 

클래스에서 사용할 거야 

class User1 implements UserType
UserType 물려받아서 User1 에서 구현하겠습니다

둘다 클래스에서 구현가능하다

선언적확장이 가능 하냐 안하냐

동일한 이름으로 재선언할  경우 자동으로 하나로 합쳐지는 것이 : 선언적확장이라고 하는데  

공통점 : 선언방식, 구현은 둘다 동일 하나 
차이점 : 🟡인터페이스는 선언적 확장 가능 , Type Alias는 선언적 확장 불가능
선언적 확장     -   변수라고 생각하면 동일한 이름으로 재선언이 불가능한데 
🟡interface 는 객체에서만 사용가능하고 
type은 어디에서나 사용가능 하다.

User interface는 젠더를 가질 수 없다.


인터페이스는 이게 가능하다 
Type Alias vs Inteface


type AddType= UserType & {address : string}
ㄴ 타입별칭은 선언적확장이 불가능하기 때문에 이런식으로 속성추가를 해야한다.

타입별칭 vs 인터페이스
선언적확정의 가능, 불가능에서 가장 큰 차이점이 있다 . 


🔵
새로운 인터페이스를 만들건데 기존의 있던 것을 물려받아서 새로운 인퍼테이스를 만들어야 할 때.

interface AddInterface extends User


🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵

protected : private + a

get set



사용하는 방법
ㄴ 속성 이름 앞에 접근 제한자를 붙일 수 있음 

class Person {
name : string;
private age : number; 
}


생략시 public 으로 적용

tip
속성앞에 언더바 있으면 private  변수라고 기억해 놓으면 된다.



인터페이스 구현 

class 

인터페이스 내부에 속성만 넣는 것이 아니라 함수도 넣을 수 있다.



Interface NewInterface{
name: string;
age: number;
함수1(){}
함수2(){}


인터페이스 안에 함수 넣을 수 있지만 껍데기만 넣어야 한다. 



함수를 갖게되는 경우 함수의 껍데기만 가져야 한다.
실제 인터페이스 안에는 



인터페이스는 어떠한 속성이 있는지에 대한 규약일 뿐이지 해당 속성을 구현해주지 않기 때문에, 클래스 내부에서 해당 속성을 정의해야한다.

클래스는 그 규약을 읽어서 구현만 해줄 뿐이다. 

🔴🔴🔴🔴

추상 클래스(abstract class)

🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵

타입

값


중복되는 타입을 하나의 공간에다가 저장하는 방법인 2가지가 있는데
1.type
2.인터페이스 - 인터페이스라는 영역에다가 하나의 

userType 


별도로 하나로 빼놓으면 

타입스크립트에서 컴파일 후 자바스크립트로 바뀐다. 
자바스크립트는 인터페이스 이해를 하지 못한다.  알아서 컴파일되니 상관x!


만드는 방법

interface 인터페이스이름{
속성이름 : 속성타입 
}

ㄴ 인터페이스는 객체만 지정할 수 있다.

ex

Type Alias  =  타입별칭

Interface = 인터페이스 

P.
12

유니언타입 


INTERFACE는
 유니언타입도 안되고 
오로지 객체만 된다. 


인터페이스는 꼭 객체만 된다.


객체에 한해서는 인터페이스로 하는 것이 성능에 조금 더 낫다.

p.13
클래스에서 사용하는
구현 implements


클래스 user2를 만들거고요, 구현할 거에요 userinterface를 사용해서 

둘다 implements 가 가능하다.!!



선언적확장 
ㄴ 동일한 이름으로 재선언이 가능하다.

------------------------------------
interface a {1,2};
1
1
1
interface a {1};

console.loa(a) => 1,2,1
ㄴ 인터페이스만 이게 가능하다 
ㄴ 선언적확장이 가능하다.
ㄴ 자동으로 합쳐진다.
------------------------------------

type 같은 경우, 선언적확장이 불가능하기 때문에 
type AddType = 
새로운 이름으로 바꿔준 다음,
and 연산자를 이용해서 새로운 타입을 넣어준다.


-------------------------------------
p. 15
인터페이스는 상속이 가능하다 (상속 extends, 그대로 물려주는 것) 

interface AddInterface extends UserInterface {
gender : string;
}



-------------------------------------
p
constructor () 메서드 .   생성자 


매개변수로 2개를 전달했을 때 

class Person{
name : string ; 
age : number;

constructor(name : string, age : number){


클래스 속성은 사전에 선언되어야 해서 
constructor 안에서 
this.를 사용하는 것이 가능하다. 




let p1 : Person = new Person("soo",20);

new 키워드를 사용해서 실제 객체를 생성



-------------------------------------


public: 클래스 내부, 외부 둘다 접근 가능
private : 클래스 내부 접근 가능, 외부에서는 불가능
protetced : 클래스 내부 접근 가능, 외부에서는 불가능   => private 과 똑같음
※ 상속받은 자식 클래스는 접근 가능.

-------------------------------------
생략시, public 으로 적용이 가능하다.

private 나 protected는 우회해서,
(how to) getter setter 을 이용하여 우회해서 접근해야한다. 

-------------------------------------



3. 추상 클래스  ( 추상 메서드 1개이상 가지고 있어야 한다.)

추상화 : 여러가지 사물/
 개념에서 공통된 특성을 묶어 이름을 붙이는 것 

추상 메서드 : 완전하게 구현되어 있지 않은 메서드

추상 클래스를 상속하는 클래스에서 추상 메서드를 구현해야 한다. 

★ 추상클래스는 객체를 생성할 수 없음
ㄴ 메서드가 미완성이기 때문이다. 

목적 : 상속



-------------------------------------
타입을 별도로 별도로 보내지 않으면 타입추론이 발생 
컴파일러가 알아서 판단하여 보내는 것 

-------------------------------------
//type 폴더
// hello.ts -> 브랑줘가 읽을 수 업음.
//hello.ts -> hello.js 브라우저가 읽을 수 있음
//tsc 파일명.ts => 파일명.js


실행 
$ node 파일명.js

-------------------------------------
인터페이스는 자바스크립트 코드로 컴파일되지 않는다.(조심 , 내필기) 
🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵

🔴
<자바스크립트 인강>
https://www.udemy.com/course/codingnoona/
ㄴ혼자배우는 자바스크립트: 기본부터 포트폴리오까지 한번에 끝내기


https://nomadcoders.co/javascript-for-beginners
ㄴ 바닐라 JS로 크롬 앱 만들기, 전에 했던 누나강의에서 투두 만들었던거의 업그레이드 버전인 강의입니다! 객체도 쓰고 localstorage에 데이터 저장도 하는 단계가 있어 도움이 될거 같아 공유해용 


https://ko.javascript.info/
ㄴJS 개념이 카테고리별로 잘 되어있습니다

🔴



https://ux.stories.pe.kr/m/290
ㄴvscode에서 단축어 커스텀하는 방법입니당 

https://chrome.google.com/webstore/detail/cssviewer/ggfgijbpiheegefliciemofobhmofgce?hl=ko
ㄴ아까 강사님과 크롬에 react developer tools깔때 봤는데 거 깔아두셨길래 봣는데 화면에 보이는 css 정보 알려주는 확장 프로그램입니다!


https://chrome.google.com/webstore/detail/whatfont/jabopobgcpjmedljpbcaablpmlmfcogm/related
ㄴ이건 font 알려주는 거였답니다

https://hengbokhan.tistory.com/133
ㄴ 쿼리란 무엇인가

책은 
[리액트를 다루는 기술]


12월 1일 부터 


🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵
예습반 노션(일정 확인 및 스터디 일지 기록용) 
https://www.notion.so/yuuulya/daac0e9a58f84711b960f9e1f63cb1b5

 
🔍원하는 기능을 검색해 볼 때 유용한 사이트 
1. MDN 
https://developer.mozilla.org/ko/

2. devdocs
https://devdocs.io/



❣️자바스크립트 강의 추천 
1. 드림코딩 - 자바스크립트 마스터(새싹 계정 로그인 필요) 
https://academy.dream-coding.com/courses/javascript

2. 드림코딩 - 자바스크립트 기초 강의 (유튜브 무료강의, 주로 개념관련 내용이 많음) 
https://youtube.com/playlist?list=PLv2d7VI9OotTVOL4QmPfvJWPJvkmv6h-2

3. 코딩앙마 - 자바스크립트 [기초] 강좌 100분 완성(유튜브 무료강의) 
https://youtu.be/KF6t61yuPCY

4. 코딩앙마 - 자바스크립트 [중급] 강좌 140분 완성 (유튜브 무료 강의) 
https://youtu.be/4_WLS9Lj6n4

5. 생활코딩 - 자바스크립트 입문 수업 (유튜브 무료 강의) 
https://youtube.com/playlist?list=PLuHgQVnccGMA4uSig3hCjl7wTDeyIeZVU

6. 유노코딩 - 입문자를 위한 자바스크립트 기초 (유튜브 무료강의) 
https://youtube.com/playlist?list=PLFeNz2ojQZjv41Q5cCw8blOpGTTrZS5PU

7. 제로초 - ES2021 자바스크립트 강좌 (유튜브 무료강의)
https://youtube.com/playlist?list=PLcqDmjxt30RvEEN6eUCcSrrH-hKjCT4wt

ㄴ 예습스터디 카톡내용 정리 중🔴예습반 노션(일정 확인 및 스터디 일지 기록용) 
https://www.notion.so/yuuulya/daac0e9a58f84711b960f9e1f63cb1b5

 
🔍원하는 기능을 검색해 볼 때 유용한 사이트 
1. MDN 
https://developer.mozilla.org/ko/

2. devdocs
https://devdocs.io/



❣️자바스크립트 강의 추천 
1. 드림코딩 - 자바스크립트 마스터(새싹 계정 로그인 필요) 
https://academy.dream-coding.com/courses/javascript

2. 드림코딩 - 자바스크립트 기초 강의 (유튜브 무료강의, 주로 개념관련 내용이 많음) 
https://youtube.com/playlist?list=PLv2d7VI9OotTVOL4QmPfvJWPJvkmv6h-2

3. 코딩앙마 - 자바스크립트 [기초] 강좌 100분 완성(유튜브 무료강의) 
https://youtu.be/KF6t61yuPCY

4. 코딩앙마 - 자바스크립트 [중급] 강좌 140분 완성 (유튜브 무료 강의) 
https://youtu.be/4_WLS9Lj6n4

5. 생활코딩 - 자바스크립트 입문 수업 (유튜브 무료 강의) 
https://youtube.com/playlist?list=PLuHgQVnccGMA4uSig3hCjl7wTDeyIeZVU

6. 유노코딩 - 입문자를 위한 자바스크립트 기초 (유튜브 무료강의) 
https://youtube.com/playlist?list=PLFeNz2ojQZjv41Q5cCw8blOpGTTrZS5PU

7. 제로초 - ES2021 자바스크립트 강좌 (유튜브 무료강의)
https://youtube.com/playlist?list=PLcqDmjxt30RvEEN6eUCcSrrH-hKjCT4wt예습반 노션(일정 확인 및 스터디 일지 기록용) 
https://www.notion.so/yuuulya/daac0e9a58f84711b960f9e1f63cb1b5

 
🔍원하는 기능을 검색해 볼 때 유용한 사이트 
1. MDN 
https://developer.mozilla.org/ko/

2. devdocs
https://devdocs.io/



❣️자바스크립트 강의 추천 
1. 드림코딩 - 자바스크립트 마스터(새싹 계정 로그인 필요) 
https://academy.dream-coding.com/courses/javascript

2. 드림코딩 - 자바스크립트 기초 강의 (유튜브 무료강의, 주로 개념관련 내용이 많음) 
https://youtube.com/playlist?list=PLv2d7VI9OotTVOL4QmPfvJWPJvkmv6h-2

3. 코딩앙마 - 자바스크립트 [기초] 강좌 100분 완성(유튜브 무료강의) 
https://youtu.be/KF6t61yuPCY

4. 코딩앙마 - 자바스크립트 [중급] 강좌 140분 완성 (유튜브 무료 강의) 
https://youtu.be/4_WLS9Lj6n4

5. 생활코딩 - 자바스크립트 입문 수업 (유튜브 무료 강의) 
https://youtube.com/playlist?list=PLuHgQVnccGMA4uSig3hCjl7wTDeyIeZVU

6. 유노코딩 - 입문자를 위한 자바스크립트 기초 (유튜브 무료강의) 
https://youtube.com/playlist?list=PLFeNz2ojQZjv41Q5cCw8blOpGTTrZS5PU

7. 제로초 - ES2021 자바스크립트 강좌 (유튜브 무료강의)
https://youtube.com/playlist?list=PLcqDmjxt30RvEEN6eUCcSrrH-hKjCT4wt

예습스터디 카톡내용 정리 중 
🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵



🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵


🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵🟡🔵

