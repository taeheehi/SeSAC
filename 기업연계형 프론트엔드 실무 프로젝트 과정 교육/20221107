오늘 출근길 : 지하철 출근 너무 힘들다.
나야 뭐 찌그러져도 괜찮은데 노트북 망가질까봐 걱정이 됨... 
ㄴ 시위때문에 일찍 나왔는데 오히려 더 그래서 끼는 건가...?
버스로 한번 와봐야겠다.
issue +5호선 타면 카카오맵 안울려서 오늘 서대문역까지 감. ☞  5 호선으로 갈아타고 나서 주의하도록 하자 


🟠🟠🟠🟠🟠🟠🟠🟠🟠🟠🟠🟠🟠🟠🟠🟠🟠🟠🟠🟠🟠🟠🟠🟠🟠🟠🟠

오늘까지 TODO
ㅁ추가문제2 다시 풀고 제출해야함. ( 2,6,7)
ㅁ복습스터디 클론코딩 과제2 개 더 만져보기
ㅁ   내일 스터디 과제 

🟠🟠🟠🟠🟠🟠🟠🟠🟠🟠🟠🟠🟠🟠🟠🟠🟠🟠🟠🟠🟠🟠🟠🟠🟠🟠🟠🟠🟠

실습문제 풀이  -  추가문제2
2,6,7 다시 풀겠습니다.

for문 - 조건도 복잡, 언제까지 돌려야할지 도 모르니까, 무한반복을 해야하고 탈출을 해야하니까 

🟠
문제의 핵심  : 무한반복 + 탈출 
if(coffee ==0)
무한루프 
while(true) - 사용자가 몇번만에 성공할지 잘 모르기때문에
그리고 빠져나올수 있는지가 point


🟢

선언, 초기화, 할당

최대값 저장 
if (max_score < score)
{
max_score = score;}
입력값으로 바꾸어 주세요 

최소값 저장 
if (min_score < score)
{
min_score = score;}
입력값으로 바꾸어 주세요


indexOf(max_score) // indexOf에 찾고싶은 값을 넣어놓으면 인데스 번호를 알려주는 '인덱스 오브'



최고와 최저 한개만 제거 하면 되요 
//splice(startIndex, deleteCount)
//startIndex : 시작인덱스
//deleteCount : 제거할 요소의 수, 0 이하의 숫자를 넣으면 아무것도 제거안함
//배열의 기존 요소를 삭제 또는 교체하거나 새 요소를 추가하여 배열의 내용을 
//원본 배열 자체를 수정

//최고점수, 최저 점수 제거
socres.splices(maxIndex, 1);
여기서 한개만 제거할게요 
scores.splice(minIndex, 1);

원본도 갱신이 된다. 

🟠indexOf와 splice의 콜라보

오전 9: 20정도~오전 9:53 2022-11-07
실습문제2 풀이



오전 9:50 2022-11-07
오늘 배울 내용 : 객체 










🟠🟠🟠🟠🟠🟠🟠🟠🟠🟠🟠🟠🟠🟠🟠🟠🟠🟠🟠🟠🟠🟠🟠🟠🟠🟠🟠🟠🟠
오전 9: 20~오전 9:53 2022-11-07
<실습문제2 풀이>

for문 - 조건도 복잡, 언제까지 돌려야할지 도 모르니까, 무한반복을 해야하고 탈출을 해야하니까 

🟠
문제의 핵심  : 무한반복 + 탈출 
if(coffee ==0)
무한루프 
while(true) - 사용자가 몇번만에 성공할지 잘 모르기때문에
그리고 빠져나올수 있는지가 point


🟢

선언, 초기화, 할당

최대값 저장 
if (max_score < score)
{
max_score = score;}
입력값으로 바꾸어 주세요 

최소값 저장 
if (min_score < score)
{
min_score = score;}
입력값으로 바꾸어 주세요


indexOf(max_score) // indexOf에 찾고싶은 값을 넣어놓으면 인데스 번호를 알려주는 '인덱스 오브'



최고와 최저 한개만 제거 하면 되요 
//splice(startIndex, deleteCount)
//startIndex : 시작인덱스
//deleteCount : 제거할 요소의 수, 0 이하의 숫자를 넣으면 아무것도 제거안함
//배열의 기존 요소를 삭제 또는 교체하거나 새 요소를 추가하여 배열의 내용을 
//원본 배열 자체를 수정

//최고점수, 최저 점수 제거
socres.splices(maxIndex, 1);
여기서 한개만 제거할게요 
scores.splice(minIndex, 1);

원본도 갱신이 된다. 

🟠indexOf와 splice의 콜라보


실습문제2 풀이
오전 9:53 2022-11-07


-------------------------------------

오전 9:50 2022-11-07
오늘 배울 내용 : 객체 



각자만의 특징  다 다름 


현실세계의 눈에 보이는 것은 모두 다 객체인데,
모든 객체들은 자기만의 고유한 특징들을 가지고 있다.


여러개의 프로퍼티와 메소드로 구성
프로퍼티 : ★특성들
메소드 : ★동작들 

⚫프로그래밍 언어에서 객체는,
고유한 특성들(프로퍼티)과
고유한 행동들 (메소드)들로 구성되어있다


 🔶 객체가 탄생비화
 🔸현실세계를 모방🔸하기 위해서 나온 것 


🔴
= 1개 : 오른쪽 값을 왼쪽에 <넣어라> 
== , === <비교> : 둘이 같니?

🔴🟠🟡🟢🔵🟣🟤⚫

객체를 만드는 자바스크립트 코드
var account = {
owner : "정수아",
code : "111"
}
🔴🟠🟡🟢🔵🟣🟤⚫
p.6
배열과 차이점

배열은 | 실제 원소에 접근할때, 인덱스 값을 사용해서 접근 
객체는 | X인덱스 사용X , X숫자를 사용하지X, ☞즉슨 순서가 없다.
객체는 순서가 없기 때문에, 순서가 없고, 인덱스를 사용하지 않는다. ★ 키라는 문자열을 이용해서 오른쪽의 값을 가져 올 수 있다.

배열은 차곡차곡 , 숫자를 이용해서 쌓기 때문에 index를 사용할 수 있다. 
객체는 데이터를 접근할 때 문자열을 사용한다.   

공통점 : 하나의 공간에 여러가지 데이터를 저장할수 있다.
차이점 : 사용방법(언제 어떻게,) 하지만 객체를 사용하지

🔵用法🟣
배열의 사용 ex) 여러 동물들의 이름이 나열된 배열  🟣걍 나열
객체는 🔵다양한 특성과 속성이 있는 🔵하나의 객체를 표현할 때 사용한다.    
ex. 강아지를 저장할 건데, 강아지의 다양한 특징들을 저장하고 
싶어요.   - 좀 더 가독성도 좋고 사용이 원활해진다. 

주로 사용하는 경우가 다르다. 


🔴point🔴 객체는! 
다양한 특성이 있는 하나의 아이템을 표현할 때 쓰는 것이 객체이다 .🔴

p.7
var 고양이 = {
"다리" :2;
"이름" : "야옹이",
"색깔" : "얼룩무늬"
}  //😐약간 CSS랑 저장 방법이 비슷하네~😐
객체 리터럴(object literal)   +쌍따옴표 안붙여도 KEY임은 변함없음!


P.8

P.9
콜론은 기준으로 왼쪽이 키, ""없어도됨, 문자열임(숫자로 입력해도 문자열로 저장)
🔹특별한 일이 없는 이상 키 자리에 공백 포함하지 않는다. 

-실습-


순서가 중요한 경우 꼭 배열을 사용해야 한다. ex번호표

오전 10:54 2022-11-07



🔴🟠🟡🟢🔵🟣🟤⚫



오전 11:09 2022-11-07


p.18
빌려준 돈 기록하기
일수 프로그램ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ





🔴🟠🟡🟢🔵🟣🟤⚫


🔶 화살표함수 🔶

자신의 상위함수를 찾아갑니다.

화살표함수 안에 this가 있으면 상위에 있는 함수들을 찾아가게 된다. 

부모를 찾아가서, 화살표 함수가 아닌애를 또 찾아가게 됨 .


undefined 

굉장히 간편해서 자주 w 치명적인 단점이 있는데, 

여럿인 상위함수들을 찾아가서, 
선언인 funcion인 상위함수들을 찾아가서  

undefined 가 출력될 수 있다. 

화살표함수를 쓰는 건 나쁘지 않은데, 

화살표함수  (부모를 찾아가는데, 다양한 부모 중  (funcion으로 선언된, 화살표함수로 선언된 ) function 부모를 만날때까지 찾아가게 된다. 
absolute   (부모태그를 찾아가 , 부모가 relative가 적용된 애를 끝까지 찾아가는 것 )
ES5, ES6, ES7



점심시간!

🔴🟠🟡🟢🔵🟣🟤⚫






