## 열째날
   
 
 ---
 
<img width="490" alt="image" src="https://user-images.githubusercontent.com/113709273/196216167-b3c8f461-d299-4af1-92d6-fd0797f30ee8.png">

### 오늘 진도, 배운 내용
D+2 / 20221018 / 9:00 ~ 18:00 / HTML&CSS / CSS 기초 문법 & 선택자   

★셀렉터 중요하고 많이쓰이고!★

책으로는 
 
#### 1️⃣첫째마당 ) 웹 개발 기본 다지기   

#### 2️⃣둘째마당 ) HTML 시작하기   
  
#### 05 입력 양식 작성하기    
05-1 폼 삽입하기    
05-2 사용자 입력을 위한 input 태그     
05-3 input태그의 주요 속성   
05-4 폼에서 사용하는 여러 가지 태그   

#### 3️⃣셋째마당 ) CSS다루기   
  
#### 06 CSS의 기본    
06-1 웹 문서에 디자인 입히기    
06-2 스타일과 스타일 시트     
06-3 CSS 기본 선택자 알아보기   
06-4 캐스케이딩 스타일 시트 알아보기   




---

### 강의 자료



수업필기
---
## 복습
 get  주소창에 검색어 노출 ㅇ   - 유리상자에 다보이게 해서 가져가세요
 post 주소창에 검색어 노출x   -  종이상자에 안보이게 해서 가져가세요

원칙 
front 벡에 연결하지 않는 것이 원칙 
백엔드만이 데이터(백)에 연결하는 것이 원칙


로그인 성공 시켜줘야하고 

데이터 담아 오시는데 박스에다가 반드시 이름은 쿼리=(상자의 이름)로

데이터 가져오는데 

타입 속성에 밸류 값이 아니라 
in put type="submit" 

여러줄 하는 것이 textarea
데이터 목록을 가진 텍스트 입력 창 - <datalist>

인풋 타입 이미지로 
섭밋 기능을 가지게 된다 
섭밋 새로고침(페이지깜빡)한번 된다  = 싹다 데이터 초기화되면서 데이터를 보내주게 된다.

일반 butto은 섭밋 기능 없당.


라디오값이 셋중 하나만 선택하는 것이 라디오  [택1버튼 =radio버튼]

라벨 : 글자와 폼태그를 하나로 묶어주는 것    ☞글자만 눌러도 체크되게 하는 것        label

속성의 값이 백그라운드로 깔리는 것 placeholder



오전 9:37 2022-10-26   복습종료



---
## 오늘 강의 필기 



모바일 기기를 위한 뷰포트
엔진을 기반으로 만들어져 있어요 


<meta name="viewport" content="width=device-with, initial-scale=1.0">

뷰포트 단위
v
vw
vh
vmin
vmax

viewport 접속하는 기기의 너비 길이   
뷰포트 너비의 1%가 1vw

뷰포트 너비1000px, 높이 800px
1vw : 뷰포트 위드쓰 : 10px
1vh : 8px
1vmin : 8px
1vmax : 10px 

미디어 쿼리(Media Queries)
미디어 쿼리 기본 문법
@media [only 또는 not] [미디어 유형][and 또는 ,] (조건문) {ㅅㄹ--
실행문
}
only라는 속성은 잘 이용하지 않아요 
not은  not 다음에 지정하는 미디어 유형을 제외

@media screen {/*화면용 스타일 작성*/}  - 미디어 쿼리 적용해주세요
@media print {/*인쇄용 스타일 작성/}
ㄴ 이것만 가지고는 의미가 없다. 
왜? 화면 사이즈에 '반응'하지 않는 고정 문장이기 때문에
스크린이긴 스크린인데 화면의 크기가 ㅇㅇ 인 애가 들어오면 ~해주세요
and
= 는 or ,
@media screen and (min-width:767px) and (orientation:landscape){//스타일 작성}



작성순서가 중요! 
★min = 이상★
★max = 이하★

min을 쓸 거면 작은 숫자가 있는 것부터,
max을 쓸 거면 큰 숫자가 있는 것부터 작성해야지
섞어두면 작동되지 않는다.
@media all and (min-width:320px) {실행문}
@media all and (min-width:768px) {실행문}
@media all and (min-width:1024px) {실행문}

min이라고 해서 이하가 절대 아님!
적어도 320'이상'일 때 실행해주세요  - min이라고 해서 이하인 것이 아니에요! 
적어도 768'이상'일 때 실행해주세요 
적어도 1024'이상'일 때 실행해주세요 

★유의점★ 둘이 반대로 개념을 이해해주셔야 해요 
@media all and (max-width:320px) {실행문}
@media all and (max-width:768px) {실행문}
@media all and (max-width:1024px) {실행문}

320'이하'일 때 실행해주세요
768'이하'일 때 실행해주세요
1024'이하'일 때 실행해주세요

외부CSS파일연결 
- 링크 방식
- @import문

background-size속성
cover 이미지 비율을 유지하면서 영역 전체에 꽉 차게 함 
이미지가 잘릴 수 있음 
contain 원본 비율을 유지
영역 전체에 이미지가 채워지지 않을수 있음

teacher's pick :  주로 cover가 좀 더 좋은 것 같아요

1024 max (이하) 일떄는  [큰 수에서 1024>768 > 320> 작은 수] 조건으로 작성 
768
320


320 min (이상) 일때는 [작은 수 320< 768< 1024 큰 수] 조건으로 작성
768
1024


왜냐?
컴퓨터는 순서대로 차례차례 읽기 때문에 



오늘 반응형 웹 배웠으니
HTML CSS 껍데기 만들기 완료

껍데기 완료 


사이트의 목적에 맞춰서 어떻게 (웹 or 어플)로 만들지는 개발자의 선택 

사용자율이
웹(http) ≒ 어플 
일시 웹 하나만 만들어도 되지만

웹 < 어플 
이면 앱개발을 하는 것이 유리




html 

어플 


사용자가 주로 모바일로 접속하는 경우 


모바일용으로 아얘 어플로 따로 빼야 하는 경우 ex.쿠팡어플 티몬 어플 



